# build a repository in current folder
git init  
# add file in work directory to index area
git add aaa.txt  
# commit file in index area to repository
git commit -m 'add a new file'
# check out the status of repository
git status
# check out the difference between current and latest file
git diff aaa.txt
# check out the history of commit
git log
git log --pretty=oneline
# reset work directory to prev commit status, latest commit will be erased
git reset --hard HEAD^
# reset work directory to given commit edition
git reset --hard 4dd84
# check out command history with commit id
git reflog
# discard the changes in work directory(including remove), status go back to the last add or commit
git checkout -- aaa.txt
# unstage changes after add
git reset HEAD aaa.txt
# remove file in workdirectory, changes goes to stage area, not commit 
git rm ttt.txt
# push file from localhost to github
git remote add origin git@github.com:rookiy/LearGit.git
git push -u origin master
git push origin master
# clone remote repository to local
git clone git@github.com:rookiy/LearnGit.git
git clone https://github.com/rookiy/LearnGit.git
# list branch
git branch
# create a new branch
git branch name
# switch branch
git checkout name
# create and switch branch
git checkout -b name
# delete branch
git branch -d name
# merge current branch to given branch
git merge name
# branch merging situation 
git log --graph --pretty=oneline --abbrev-commit
# git merge no fastforward mode
git merge --no-ff -m 'merge with --no-ff' dev
# stash, save current work directory and index state in stash
git stash
git stash list
git stash apply
git stash drop
git stash pop
git stash apply stash@{0}
# delete a unmerged branch
git branch -D name
# fetch latest info
git fetch <remotehost> <remotebranch>
# fetch and merge
git fetch <remotehost> <remotebranch>:<localbranch> 
